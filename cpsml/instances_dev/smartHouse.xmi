<?xml version="1.0" encoding="UTF-8"?>
<cpsml:CPS xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cpsml="http://big.tuwien.ac.at/cpsml"
    xsi:schemaLocation="http://big.tuwien.ac.at/cpsml ../../cpsml/model/cpsml.ecore"
    name="SmartHouse">
  <environment
      name="Kitchen">
    <node name="Oven"
        status="CRITICAL">
      <subscription
          messageBroker="//@messageBroker.0">
        <topics>temp</topics>
        <topics>light</topics>
      </subscription>
      <connectionModule
          xsi:type="cpsml:WirelessModule"
          name="OVEN"
          connect="//@messageBroker.0/@connectionModule.1"
          range="10.0">
        <supportedProtocols>DDS</supportedProtocols>
        <supportedProtocols>MQTT</supportedProtocols>
      </connectionModule>
      <connectionModule
          xsi:type="cpsml:WiredModule"
          name="OVEN"
          connectOpposite="//@environment.1/@node.0/@connectionModule.1">
        <supportedProtocols>MQTT</supportedProtocols>
        <supportedProtocols>SMQTT</supportedProtocols>
      </connectionModule>
      <position/>
      <component
          xsi:type="cpsml:Actuator"
          name="Heater"
          status="CRITICAL"
          topic="temp">
        <function
            name="heatup">
          <parameter
              name="temperature"/>
        </function>
      </component>
      <component
          xsi:type="cpsml:Sensor"
          name="Termometer"
          topic="temp">
        <function
            name="getTemp"
            returnDataType="INT"
            hasReturn="true"/>
      </component>
      <component
          xsi:type="cpsml:Actuator"
          name="LedLight"
          topic="light"/>
    </node>
    <node name="Toaster">
      <connectionModule
          xsi:type="cpsml:WirelessModule"
          name="TOASTER"
          connect="//@messageBroker.0/@connectionModule.1"
          range="3.0">
        <supportedProtocols>MQTT</supportedProtocols>
      </connectionModule>
      <position
          x="2.0"
          y="2.0"
          z="1.0"/>
      <component
          xsi:type="cpsml:Actuator"
          name="HeatingElement">
        <function
            name="toast">
          <parameter
              name="duration"
              dataType="INT"/>
        </function>
      </component>
    </node>
  </environment>
  <environment
      name="Bathroom">
    <node name="Toilet"
        status="WARNING">
      <connectionModule
          xsi:type="cpsml:WirelessModule"
          name="TOILET"
          connectOpposite="//@messageBroker.0/@connectionModule.1"
          range="10.0">
        <supportedProtocols>DDS</supportedProtocols>
        <supportedProtocols>MQTT</supportedProtocols>
        <supportedProtocols>SMQTT</supportedProtocols>
      </connectionModule>
      <connectionModule
          xsi:type="cpsml:WiredModule"
          name="TOILETwired"
          connect="//@environment.0/@node.0/@connectionModule.1">
        <supportedProtocols>DDS</supportedProtocols>
        <supportedProtocols>MQTT</supportedProtocols>
        <supportedProtocols>SMQTT</supportedProtocols>
      </connectionModule>
      <position
          x="5.0"
          y="5.0"/>
      <component
          xsi:type="cpsml:Actuator"
          name="toiletLid"
          status="WARNING">
        <function
            name="open"/>
        <function
            name="close"/>
      </component>
      <component
          xsi:type="cpsml:Sensor"
          name="lidSensor">
        <function
            name="isOpen"
            returnDataType="BOOLEAN"
            hasReturn="true"/>
      </component>
    </node>
  </environment>
  <environment
      name="Garden">
    <node name="Weatherstation">
      <publication
          messageBroker="//@messageBroker.0">
        <topics>water</topics>
        <topics>temp</topics>
      </publication>
      <connectionModule
          xsi:type="cpsml:WirelessModule"
          name="WEATHERSTATIONwl"
          connect="//@messageBroker.0/@connectionModule.1"
          range="20.0">
        <supportedProtocols>MQTT</supportedProtocols>
      </connectionModule>
      <position
          x="10.0"
          y="10.0"
          z="4.0"/>
      <component
          xsi:type="cpsml:Sensor"
          name="Termometer"
          topic="temp">
        <function
            name="getTemperature"
            returnDataType="INT"
            hasReturn="true"/>
      </component>
      <component
          xsi:type="cpsml:Sensor"
          name="Rain"
          topic="water"/>
    </node>
    <node name="IrrigationSystem">
      <subscription
          messageBroker="//@messageBroker.0">
        <topics>water</topics>
        <topics>gardening</topics>
      </subscription>
      <connectionModule
          xsi:type="cpsml:WiredModule"
          name="IRRIGATIONSYSTEM"
          connect="//@messageBroker.0/@connectionModule.0">
        <supportedProtocols>MQTT</supportedProtocols>
      </connectionModule>
      <position
          x="8.0"
          y="8.0"
          z="-1.0"/>
      <component
          xsi:type="cpsml:Actuator"
          name="WaterValve"
          topic="water"
          runs="10"
          ratedRuns="10000">
        <function
            name="irrigateGarden">
          <parameter
              name="durationMIN"
              dataType="INT"/>
        </function>
      </component>
      <component
          xsi:type="cpsml:Sensor"
          name="GroundHumidity"
          topic="gardening"
          frequency="0.1"/>
    </node>
  </environment>
  <messageBroker
      name="Central">
    <connectionModule
        xsi:type="cpsml:WiredModule"
        name="CENTRAL_WM"
        connectOpposite="//@environment.2/@node.1/@connectionModule.0">
      <supportedProtocols>DDS</supportedProtocols>
      <supportedProtocols>MQTT</supportedProtocols>
      <supportedProtocols>SMQTT</supportedProtocols>
    </connectionModule>
    <connectionModule
        xsi:type="cpsml:WirelessModule"
        name="CENTRAL_WLM"
        connect="//@environment.1/@node.0/@connectionModule.0"
        connectOpposite="//@environment.0/@node.1/@connectionModule.0 //@environment.2/@node.0/@connectionModule.0 //@environment.0/@node.0/@connectionModule.0"
        range="20.0">
      <supportedProtocols>DDS</supportedProtocols>
      <supportedProtocols>MQTT</supportedProtocols>
      <supportedProtocols>SMQTT</supportedProtocols>
    </connectionModule>
    <position
        x="3.0"
        y="3.0"/>
    <topics>temp</topics>
    <topics>gardening</topics>
    <topics>water</topics>
    <topics>light</topics>
  </messageBroker>
  <controller
      name="Controller C1">
    <subscription
        messageBroker="//@messageBroker.0">
      <topics>temp</topics>
      <topics>gardening</topics>
      <topics>light</topics>
    </subscription>
    <publication
        messageBroker="//@messageBroker.0">
      <topics>temp</topics>
      <topics>gardening</topics>
      <topics>light</topics>
      <topics>water</topics>
    </publication>
    <topics>temp</topics>
    <topics>water</topics>
    <topics>gardening</topics>
    <topics>light</topics>
  </controller>
</cpsml:CPS>
